<!--
  * Copyright Xeno Innovations, Inc. 2019
  * Date:    2019-8-26
  * Author:  Damian Suess
  * File:    MainWindow.xaml
  * Description:
  *
-->
<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:controls="clr-namespace:Xeno.SQLiteAdmin.Controls"
        xmlns:prism="http://prismlibrary.com/"
        x:Class="Xeno.SQLiteAdmin.Views.MainWindow"
        Title="{Binding Title}"
        Width="725"
        Height="350"
        prism:ViewModelLocator.AutoWireViewModel="True">
  <Grid>
    <!--
    <ContentControl prism:RegionManager.RegionName="ContentRegion" />
    <Button Command="{Binding ShowDialogCommand}" Content="Show Dialog" />
    -->

    <DockPanel HorizontalAlignment="Stretch"
               VerticalAlignment="Stretch"
               LastChildFill="True">
      <StackPanel Height="32"
                  Background="#FFCCD4F8"
                  DockPanel.Dock="Top"
                  Orientation="Horizontal">

        <!--
        TODO: Use custom controls
        <ContentControl prism:RegionManager.RegionName="ToolbarRegion" />
        -->

        <ToolBarTray HorizontalAlignment="Stretch" SnapsToDevicePixels="True">
          <ToolBar VerticalAlignment="Stretch"
                   SnapsToDevicePixels="True"
                   ToolBarTray.IsLocked="True">
            <!--<Button Command="Copy"
                    Content="Copy Text"
                    SnapsToDevicePixels="True" />-->

            <Button Command="Open"
                    Content="Open File"
                    SnapsToDevicePixels="True" />

            <Button Command="Save"
                    Content="Save File"
                    SnapsToDevicePixels="True" />

            <Button Command="{Binding ExecuteCodeCommand}"
                    Content="Execute"
                    SnapsToDevicePixels="True" />
          </ToolBar>
        </ToolBarTray>
      </StackPanel>

      <StackPanel Height="50"
                  Background="#FFD9E1EF"
                  DockPanel.Dock="Bottom"
                  Orientation="Horizontal">
        <ContentControl prism:RegionManager.RegionName="StatusRegion" />
      </StackPanel>

      <StackPanel Width="42"
                  Background="#FF50576F"
                  DockPanel.Dock="Left"
                  Orientation="Horizontal">
        <ContentControl prism:RegionManager.RegionName="LeftRegion" />
      </StackPanel>

      <StackPanel Width="42"
                  Background="#FF677BA7"
                  DockPanel.Dock="Right"
                  Orientation="Horizontal">
        <ContentControl prism:RegionManager.RegionName="RightRegion" />
      </StackPanel>

      <!--<ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Stretch">-->
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <!--<ContentControl prism:RegionManager.RegionName="ContentRegion" />
        <Button Command="{Binding ShowDialogCommand}" Content="Show Dialog" />-->

        <controls:TextEditorEx Text="{Binding EditorText}"
                               x:Name="AvalonTextEditor"
                               Height="Auto"
                               FontFamily="{Binding EditorFontFamily}"
                               FontSize="{Binding EditorFontSize}"
                               IsModified="{Binding Path=EditorIsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="{Binding EditorIsReadOnly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               SelectionLength="{Binding EditorSelectionLength, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               SelectionStart="{Binding EditorSelectionStart, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               ShowLineNumbers="True"
                               SyntaxHighlighting="{Binding EditorSyntaxType}"
                               Unloaded="AvalonTextEditor_Unloaded" />

        <!--
          <MenuItem Command="Cut" Header="Cut">
            <MenuItem.Icon><Image Height="16" Source="/Editor/Images/EditCut32.png" /></MenuItem.Icon>
          </MenuItem>

          Document="{Binding EditorDocument, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
          SyntaxHighlighting="{Binding EditorSyntaxType, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
        -->
        <!--
        <avalonEdit:TextEditor x:Name="AvalonTextEditor"
                               Height="Auto"
                               FontFamily="{Binding EditorFontFamily}"
                               FontSize="{Binding EditorFontSize}"
                               IsModified="{Binding Path=EditorIsDirty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                               IsReadOnly="{Binding EditorIsReadOnly, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                               ShowLineNumbers="True"
                               SyntaxHighlighting="{Binding EditorSyntaxType}"
                               Unloaded="AvalonTextEditor_Unloaded">
          <avalonEdit:TextEditor.ContextMenu>
            <ContextMenu>
              <MenuItem Command="Cut" Header="Cut" />
              <MenuItem Command="Copy" Header="Copy" />
              <MenuItem Command="Paste" Header="Paste" />
              <MenuItem Command="Delete" Header="Delete" />
              <Separator />
              <MenuItem Command="Undo" Header="Undo" />
              <MenuItem Command="Redo" Header="Redo" />
            </ContextMenu>
          </avalonEdit:TextEditor.ContextMenu>
          select * from sqlite_master;
        </avalonEdit:TextEditor>
        -->
      </Grid>
    </DockPanel>
  </Grid>
</Window>
